import java.util.Iterator;
import java.util.Vector;

public class RandomizedQueue<Item> implements Iterable<Item> {
	Object[] array;
	int index = 0;
		
	public RandomizedQueue() {
		array = new Object[1];
	}
	
	public boolean isEmpty() {
		return index == 0;
	}
	
	public int size() {
		return index;
	}
	
	public void enqueue(Item item) {
		if(index == array.length) {
			resize(2*array.length);
		}
		array[index++] = item;
	}
	
//	public Item dequeue() {
//		
//		
//	}
//	
//	public Item sample() {
//		
//	}
//	
//	@Override
//	public Iterator<Item> iterator(){
//		
//	}		
	
	private void resize(int capacity) {
	
		
	}
	
	
	public static void main(String[] args) {
		Object[] a = new Object[4];
		a[0] = 1;
	}
}
